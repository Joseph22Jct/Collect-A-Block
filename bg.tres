[gd_resource type="VisualShader" load_steps=10 format=3 uid="uid://gyhestidlxic"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_6p642"]
constant = Color(0, 0.566068, 0.566338, 1)

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_21bvc"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_ljkyt"]
constant = Color(0.564861, 0.355812, 0.595965, 1)

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_l7yiw"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_2ixcb"]
function = 0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_lkggy"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_r0jvl"]
default_input_values = [0, 0.0, 1, 1.0]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_6jhjf"]
default_input_values = [0, 0.0, 1, 0.5]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_wedwf"]
constant = Color(0.630763, 0.261848, 0.408557, 1)

[resource]
code = "shader_type canvas_item;



void fragment() {
// UVFunc:2
	vec2 n_in2p1 = vec2(1.00000, 1.00000);
	vec2 n_in2p2 = vec2(0.00000, 0.00000);
	vec2 n_out2p0 = n_in2p2 * n_in2p1 + UV;


// Input:6
	float n_out6p0 = TIME;


// FloatFunc:5
	float n_out5p0 = sin(n_out6p0);


// FloatOp:7
	float n_in7p1 = 1.00000;
	float n_out7p0 = n_out5p0 + n_in7p1;


// FloatOp:8
	float n_in8p1 = 0.50000;
	float n_out8p0 = n_out7p0 * n_in8p1;


// ColorConstant:3
	vec4 n_out3p0 = vec4(0.564861, 0.355812, 0.595965, 1.000000);


// ColorConstant:9
	vec4 n_out9p0 = vec4(0.630763, 0.261848, 0.408557, 1.000000);


// ColorConstant:10
	vec4 n_out10p0 = vec4(0.000000, 0.566068, 0.566338, 1.000000);


	vec3 n_out4p0;
// If:4
	float n_in4p2 = 0.00001;
	if(abs(n_out2p0.x - n_out8p0) < n_in4p2)
	{
		n_out4p0 = vec3(n_out3p0.xyz);
	}
	else if(n_out2p0.x < n_out8p0)
	{
		n_out4p0 = vec3(n_out10p0.xyz);
	}
	else
	{
		n_out4p0 = vec3(n_out9p0.xyz);
	}


// Output:0
	COLOR.rgb = n_out4p0;


}
"
graph_offset = Vector2(-383.383, -25.0864)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(820, 220)
nodes/fragment/2/node = SubResource("VisualShaderNodeUVFunc_21bvc")
nodes/fragment/2/position = Vector2(140, 200)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorConstant_ljkyt")
nodes/fragment/3/position = Vector2(180, 460)
nodes/fragment/4/node = SubResource("VisualShaderNodeIf_l7yiw")
nodes/fragment/4/position = Vector2(460, 440)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatFunc_2ixcb")
nodes/fragment/5/position = Vector2(-320, 400)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_lkggy")
nodes/fragment/6/position = Vector2(-320, 280)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatOp_r0jvl")
nodes/fragment/7/position = Vector2(-140, 440)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatOp_6jhjf")
nodes/fragment/8/position = Vector2(20, 360)
nodes/fragment/9/node = SubResource("VisualShaderNodeColorConstant_wedwf")
nodes/fragment/9/position = Vector2(120, 540)
nodes/fragment/10/node = SubResource("VisualShaderNodeColorConstant_6p642")
nodes/fragment/10/position = Vector2(180, 640)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 3, 6, 0, 5, 0, 5, 0, 7, 0, 7, 0, 8, 0, 8, 0, 4, 1, 10, 0, 4, 5, 9, 0, 4, 4, 2, 0, 4, 0, 4, 0, 0, 0)
